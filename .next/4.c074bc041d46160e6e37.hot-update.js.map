{"version":3,"file":"4.c074bc041d46160e6e37.hot-update.js","sources":["webpack:///pages/test_payment.js"],"sourcesContent":["import React from 'react'\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cardNumber: '',\n      expMonth: '',\n      expYear: '',\n      cardCode: ''\n    };\n  }\n\n  componentDidMount () {\n    const script = document.createElement(\"script\");\n    script.src = \"https://jstest.authorize.net/v1/Accept.js\"\n    script.async = true;\n    document.body.appendChild(script);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Test Payment Form</h1>\n        <div className=\"testForm\">\n          <input type=\"text\" name=\"cardNumber\" id=\"cardNumber\" onChange={this.handleValueChange} placeholder=\"cardNumber\"/>\n          <input type=\"text\" name=\"expMonth\" id=\"expMonth\" onChange={this.handleValueChange} placeholder=\"expMonth\"/>\n          <input type=\"text\" name=\"expYear\" id=\"expYear\" onChange={this.handleValueChange} placeholder=\"expYear\"/>\n          <input type=\"text\" name=\"cardCode\" id=\"cardCode\" onChange={this.handleValueChange} placeholder=\"cardCode\"/>\n          <input type=\"hidden\" name=\"dataValue\" id=\"dataValue\" />\n          <input type=\"hidden\" name=\"dataDescriptor\" id=\"dataDescriptor\" />\n          <button type=\"submit\" onClick={this.sendPaymentDataToAnet.bind(this)}>Pay</button>\n        </div>\n      </div>\n    )\n  }\n\n  sendPaymentDataToAnet = e => {\n    const authData = {\n      clientKey: process.env.AUTHORIZE_PUBLIC_CLIENT_KEY,\n      apiLoginID: process.env.AUTHORIZE_API_LOGIN_ID\n    };\n\n    const {cardNumber, cardCode, expMonth, expYear} = this.state;\n\n    const cardData = {\n      cardNumber: cardNumber,\n      month: expMonth,\n      year: expYear,\n      cardCode: cardCode\n    };\n\n    var secureData = {\n      authData: authData,\n      cardData: cardData\n    };\n\n    console.log(\"About to dispatch data to authorize:\", secureData);\n\n    Accept.dispatchData(secureData, this.responseHandler);\n  }\n\n  responseHandler = response => {\n    console.log(\"responseHandler response:\", response);\n\n    if (response.messages.resultCode === \"Error\") {\n      var i = 0;\n      while (i < response.messages.message.length) {\n        console.log(\n            response.messages.message[i].code + \": \" +\n            response.messages.message[i].text\n        );\n        i = i + 1;\n      }\n    } else {\n      this.paymentFormUpdate(response.opaqueData);\n    }\n  }\n\n  paymentFormUpdate = opaqueData => {\n    const dataDescriptor = opaqueData.dataDescriptor;\n    const dataValue = opaqueData.dataValue;\n    console.log(\"SUCCESS:\", dataDescriptor, dataValue)\n    // document.getElementById(\"dataDescriptor\").value = opaqueData.dataDescriptor;\n    // document.getElementById(\"dataValue\").value = opaqueData.dataValue;\n  }\n\n  handleValueChange = e => {\n    debugger;\n    let update = {}\n    const value = e.target.value\n    const field = e.target.id\n\n    update[field] = value\n    debugger;\n    if (value !== \"\") {\n      this.setState(update);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/test_payment.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAoCA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AA1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6DA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AA3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8EA;AACA;AACA;AAEA;AACA;AAnFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsFA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAhGA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAHA;AASA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;AAlCA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}