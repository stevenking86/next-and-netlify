{"version":3,"file":"bundles/pages/test_payment.js","sources":["webpack:///(webpack)/buildin/harmony-module.js","webpack:///pages/test_payment.js"],"sourcesContent":["module.exports = function(originalModule) {\r\n\tif(!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true,\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/harmony-module.js\n// module id = ./node_modules/webpack/buildin/harmony-module.js\n// module chunks = 4 5","import React from 'react'\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cardNumber: '',\n      expMonth: '',\n      expYear: '',\n      cardCode: '',\n      payLater: false\n    };\n  }\n\n  componentDidMount () {\n    const script = document.createElement(\"script\");\n    script.src = \"https://jstest.authorize.net/v1/Accept.js\"\n    script.async = true;\n    document.body.appendChild(script);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Test Payment Form</h1>\n        <div className=\"testForm\">\n          <input type=\"text\" name=\"cardNumber\" id=\"cardNumber\" onChange={this.handleValueChange} placeholder=\"cardNumber\"/>\n          <input type=\"text\" name=\"expMonth\" id=\"expMonth\" onChange={this.handleValueChange} placeholder=\"expMonth\"/>\n          <input type=\"text\" name=\"expYear\" id=\"expYear\" onChange={this.handleValueChange} placeholder=\"expYear\"/>\n          <input type=\"text\" name=\"cardCode\" id=\"cardCode\" onChange={this.handleValueChange} placeholder=\"cardCode\"/>\n          <span>Check Box to Pay Later:</span>\n          <input type=\"checkbox\" name=\"payLater\" id=\"payLater\" onChange={this.handleCheckbox} />\n          <input type=\"hidden\" name=\"dataValue\" id=\"dataValue\" />\n          <input type=\"hidden\" name=\"dataDescriptor\" id=\"dataDescriptor\" />\n          <button type=\"submit\" onClick={this.sendPaymentDataToAnet.bind(this)}>Pay</button>\n        </div>\n      </div>\n    )\n  }\n\n  sendPaymentDataToAnet = e => {\n    //sandbox keys, okay to be public for now :-)\n    const authData = {\n      clientKey: \"2stxUEPKXWc92j33PtRd75FXzKAS5E7vKbRzpd9Wmcv7jfKQqk7D37v33mG9cb24\",\n      apiLoginID: \"9Hv89Ghw\"\n    };\n\n    const {cardNumber, cardCode, expMonth, expYear} = this.state;\n\n    const cardData = {\n      cardNumber: cardNumber,\n      month: expMonth,\n      year: expYear,\n      cardCode: cardCode\n    };\n\n    var secureData = {\n      authData: authData,\n      cardData: cardData\n    };\n\n    console.log(\"About to dispatch data to authorize:\", secureData);\n\n    Accept.dispatchData(secureData, this.responseHandler);\n  }\n\n  responseHandler = response => {\n    console.log(\"responseHandler response:\", response);\n\n    if (response.messages.resultCode === \"Error\") {\n      var i = 0;\n      while (i < response.messages.message.length) {\n        console.log(\n            response.messages.message[i].code + \": \" +\n            response.messages.message[i].text\n        );\n        i = i + 1;\n      }\n    } else {\n      this.submitSuccessfulResponse(response.opaqueData);\n    }\n  }\n\n  submitSuccessfulResponse = opaqueData => {\n    const dataDescriptor = opaqueData.dataDescriptor;\n    const dataValue = opaqueData.dataValue;\n    console.log(\"SUCCESS:\", dataDescriptor, dataValue)\n\n    console.log(\"Paying Later?\", this.state.payLater);\n\n    fetch(\"https://apitest.authorize.net/xml/v1/request.api\", {\n      body: JSON.stringify({\n        createTransactionRequest: {\n          merchantAuthentication: {\n            name: \"9Hv89Ghw\",\n            transactionKey: \"55u442u9H87Q9zLa\"\n          },\n          refId: \"123456\",\n          transactionRequest: {\n            transactionType: this.state.payLater ? \"authOnlyTransaction\" : \"authCaptureTransaction\",\n            amount: \"2000\",\n            payment: {\n              opaqueData: {\n                dataDescriptor: dataDescriptor,\n                dataValue: dataValue\n              }\n            }\n          }\n        }\n      }),\n      method: 'POST'\n    }).then(response => console.log(response.json()))\n  }\n\n  handleValueChange = e => {\n    let update = {}\n    const value = e.target.value\n    const field = e.target.id\n\n    update[field] = value\n\n    if (value !== \"\") {\n      this.setState(update);\n    }\n  }\n\n  handleCheckbox = e => {\n    this.setState({payLater: !this.state.payLater})\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/test_payment.js"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAuCA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AA9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AA/EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkFA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAHA;AANA;AADA;AAmBA;AApBA;AAqBA;AAAA;AACA;AA9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiHA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA1HA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6HA;AAAA;AAAA;AACA;AA9HA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAHA;AAUA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;AArCA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}